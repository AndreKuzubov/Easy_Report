<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAAAvCAYAAABTy8xRAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxMAAAsTAQCanBgAAANASURBVGhD7Zk7iBNBGMdjckLM+2EMKVQEUU/ER6HggYgi
        YqFwNgqCVlpYnHCFXKeFIIIgaiHWVlrcWVyjjaiIKL6K89RCUAtP8YGKb/HU30wmOi6Ty2N3s5tk//Aj
        uzPfN983/5DdZBMKpJRIJBYnk8nz8Xj8RpcwGovFlqvtSwNuYcDvLuOh2n4ohCPvDQGdzk+1/cAAkwGD
        fCz6O4y9lj1WN+C/C0SHKJVKzdf3CIEBaiowIDAgMCAwwJYBERbfxG3mILmHYAtjPeUp/8gVA9Si9/Rc
        xTiG9KowX8hxA4jLs8lnep6FF6xbVOGeyw0Djug5JjDopAr3XG4Y8EDPMcG6T1S453LcAHLe6DkmiPmk
        wj2XGwbc1HOqcFeFey7HDTD8ujKxT4W7olKpFEun0/PodwV7WAcbYD29rWVsGZQImy5iHTcA9VDoop5n
        4RIxsrgDCtPjUurtZt1TcA0mVJ0pIee2WMANA4SiFDhKzhct/xtjx5ibUQ5pTtlsNk3TO1jvHLzW1m8I
        tw2QKhQKCfJWQ584VsPNKMIam2EYfoDecFO0xAC7yuVyKerup9mneh9O4GsD8vl8kgYPUP+dXt9JbBlQ
        LBbj4krLobiYTRNjDilMY3uo9Uqv6wa2DOD4sj7OYp+JfczxVTgLhznfxusCwiMip5ZYYxE518V6rcBR
        A6aCNT7CKIUGOF8oFzaIuZ3g+jtfoWUGGBij+FA0Gp0ti2gStzjmThDzy5LjOF4aUEFscgT6ZDFNNLWK
        8XEV5wp+MEBHXDusRogvU8ctcY7hNwMqjPAxmCOLK9FoP318MMTawq8GyIsmTQ1QJixqCdFsL+PiLmPM
        aQbfGlCBBi9Q/++jM45nMXbHFNsMvjdAMUGDK2UziJ+4GXqq53lDTdrFAMFXmt0qG0I0nGPsviWmYdrJ
        AMEk7JJNoUwmM5dzW1+a2s0AwST9bJeNIRrfaIipm3Y0QPCdxtfI5hDnpy3zdWPLAJLPMPfIC+jjSuXh
        Cn3M5HzMFFcL8obFGk0Z0EkKDGjEAM7f8vqyk2BP1j9yqhvQJfwzgJPnlsmOR7zpavvy8yGe4rj+cMJP
        cGcZUtsvi4ECrizpEvjxFQr9AVokYTfBnhvLAAAAAElFTkSuQmCC
</value>
  </data>
</root>